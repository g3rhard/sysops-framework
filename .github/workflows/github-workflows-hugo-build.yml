name: Build and Deploy Hugo Site with PDF Generation

on:
  push:
    branches: [main, develop]
    tags: ["v*"]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  # Build Hugo site
  build-site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@75d2e84710de30f6ff7268e08f310b60ef14033f # v3
        with:
          hugo-version: "latest"
          extended: true

      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
        with:
          node-version: "22"
          cache: npm

      - name: Install Node deps (PostCSS)
        run: npm ci

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq pandoc texlive-latex-base texlive-fonts-recommended texlive-extra-utils texlive-latex-extra
          npm install -g markdown-pdf postcss-cli autoprefixer

      - name: Initialize git submodules
        run: |
          git submodule update --init --recursive

      - name: Initialize Hugo modules
        run: |
          hugo mod get -u

      - name: Build Hugo site
        run: hugo --minify --environment production

      - name: Upload Hugo build artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: hugo-site
          path: public/

  # Generate PDF files dynamically
  generate-pdf:
    runs-on: ubuntu-latest
    needs: build-site
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Setup Pandoc and LaTeX
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq pandoc texlive-latex-base texlive-fonts-recommended texlive-extra-utils texlive-latex-extra texlive-science

      - name: Create output directories
        run: |
          mkdir -p build/pdf
          mkdir -p build/single-chapters
          mkdir -p build/release

      - name: Generate individual chapter PDFs
        run: |
          # Find all markdown files in content/docs/ directory
          find content/docs -name "*.md" -type f | while read -r file; do
            # Extract filename without path and extension
            filename=$(basename "$file" .md)

            # Skip index files for PDF generation
            if [[ "$filename" != "_index" ]]; then
              echo "Processing: $file -> $filename.pdf"
              head -n 5 "$file"
              # Convert markdown to PDF with enhanced formatting
              pandoc "$file" \
                --from markdown+yaml_metadata_block \
                --to pdf \
                --output "build/single-chapters/${filename}.pdf" \
                --pdf-engine=lualatex \
                --variable geometry:margin=1in \
                --variable fontsize=11pt \
                --variable documentclass=article \
                --variable colorlinks=true \
                --variable linkcolor=blue \
                --variable filecolor=magenta \
                --variable urlcolor=blue \
                --toc \
                --toc-depth=3 \
                --number-sections \
                --highlight-style=espresso \
                --template=.github/templates/pandoc-template.latex 2>/dev/null || \
              pandoc "$file" \
                --from markdown+yaml_metadata_block \
                --to pdf \
                --output "build/single-chapters/${filename}.pdf" \
                --pdf-engine=lualatex \
                --variable geometry:margin=1in \
                --variable fontsize=11pt \
                --variable documentclass=article \
                --variable colorlinks=true \
                --toc \
                --number-sections \
                --highlight-style=espresso
            fi
          done

      - name: Create complete framework document
        run: |
          echo "---" > build/sysops-framework-complete.md
          echo "title: 'The SysOps Framework'" >> build/sysops-framework-complete.md
          echo "author: 'SysOps Framework Contributors'" >> build/sysops-framework-complete.md
          echo "date: '$(date +'%B %Y')'" >> build/sysops-framework-complete.md
          echo "description: 'A Modern Methodology for System Administrators and Operations Teams'" >> build/sysops-framework-complete.md
          echo "keywords: ['SysOps Framework', 'System Administration', 'IT Operations', 'DevOps', 'SRE']" >> build/sysops-framework-complete.md
          echo "lang: 'en'" >> build/sysops-framework-complete.md
          echo "toc: true" >> build/sysops-framework-complete.md
          echo "toc-depth: 2" >> build/sysops-framework-complete.md
          echo "number-sections: true" >> build/sysops-framework-complete.md
          echo "highlight-style: 'espresso'" >> build/sysops-framework-complete.md
          echo "---" >> build/sysops-framework-complete.md
          echo "" >> build/sysops-framework-complete.md

          # Add overview from main docs index
          if [ -f "content/docs/_index.md" ]; then
            # Extract content after the frontmatter, remove Hugo shortcodes, and clean up
            sed '1,/^---$/d' content/docs/_index.md | \
            sed 's/{{% pageinfo %}}//' | \
            sed 's/{{% \/pageinfo %}}//' | \
            sed 's/{{%[^%]*%}}//g' | \
            sed '/^$/N;/^\n$/d' >> build/sysops-framework-complete.md
            echo "" >> build/sysops-framework-complete.md
            echo "\\pagebreak" >> build/sysops-framework-complete.md
            echo "" >> build/sysops-framework-complete.md
          fi

          # Dynamically find and include all chapter files in order
          find content/docs -name "chapter-*.md" -type f | sort | while read -r file; do
            echo "Adding chapter: $file"

            # Extract chapter title from frontmatter
            CHAPTER_TITLE=$(grep '^title:' "$file" | sed 's/title: *"//' | sed 's/"$//')

            # Add chapter heading
            echo "" >> build/sysops-framework-complete.md
            echo "# $CHAPTER_TITLE" >> build/sysops-framework-complete.md
            echo "" >> build/sysops-framework-complete.md

            # Remove frontmatter, Hugo shortcodes, and add content
            sed '1,/^---$/d' "$file" | \
            sed 's/{{% pageinfo %}}//' | \
            sed 's/{{% \/pageinfo %}}//' | \
            sed 's/{{%[^%]*%}}//g' | \
            sed '/^$/N;/^\n$/d' >> build/sysops-framework-complete.md
            echo "" >> build/sysops-framework-complete.md
          done

      - name: Generate complete framework PDF
        run: |
          head -n 20 build/sysops-framework-complete.md
          pandoc build/sysops-framework-complete.md \
            --from markdown+yaml_metadata_block \
            --to pdf \
            --output build/pdf/sysops-framework-complete.pdf \
            --pdf-engine=lualatex \
            --variable geometry:margin=1in \
            --variable fontsize=11pt \
            --variable documentclass=book \
            --variable colorlinks=true \
            --variable linkcolor=blue \
            --variable book=true \
            --top-level-division=chapter \
            --toc \
            --toc-depth=2 \
            --number-sections \
            --highlight-style=espresso \
            --metadata title="The SysOps Framework" \
            --metadata author="SysOps Framework Contributors" \
            --metadata date="$(date +'%B %Y')" \
            --template=.github/templates/pandoc-template.latex

      - name: Generate EPUB version
        run: |
          pandoc build/sysops-framework-complete.md \
            --from markdown+yaml_metadata_block \
            --to epub \
            --output build/pdf/sysops-framework.epub \
            --top-level-division=chapter \
            --toc \
            --toc-depth=2 \
            --metadata title="The SysOps Framework" \
            --metadata author="SysOps Framework Contributors" \
            --metadata date="$(date +'%Y-%m-%d')" \
            --css=.github/styles/epub.css 2>/dev/null || \
          pandoc build/sysops-framework-complete.md \
            --from markdown+yaml_metadata_block \
            --to epub \
            --output build/pdf/sysops-framework.epub \
            --top-level-division=chapter \
            --toc \
            --toc-depth=2 \
            --metadata title="The SysOps Framework" \
            --metadata author="SysOps Framework Contributors" || \
          echo "EPUB generation failed"

      - name: Create release archive
        run: |
          # Copy Hugo site
          cp -r public/* build/release/ 2>/dev/null || echo "Hugo public directory not found, skipping..."

          # Copy PDFs
          cp -r build/pdf/* build/release/ 2>/dev/null || echo "No PDFs generated"
          cp -r build/single-chapters build/release/chapters 2>/dev/null || echo "No individual chapters generated"

          # Copy documentation
          cp README.md build/release/ 2>/dev/null || echo "README.md not found"
          cp LICENSE build/release/ 2>/dev/null || echo "LICENSE not found"
          cp CONTRIBUTING.md build/release/ 2>/dev/null || echo "CONTRIBUTING.md not found"

          # Create archive
          cd build/release && zip -r ../sysops-framework-release.zip . && cd ../..

      - name: Upload PDF artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: sysops-framework-pdfs
          path: |
            build/pdf/
            build/single-chapters/
            build/sysops-framework-release.zip

  # Deploy to GitHub Pages
  deploy-pages:
    needs: [build-site, generate-pdf]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download Hugo site
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: hugo-site
          path: ./public

      - name: Download PDFs
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: sysops-framework-pdfs
          path: ./pdfs

      - name: Combine artifacts for Pages
        run: |
          # Add PDFs to the Hugo site
          mkdir -p public/downloads
          cp -r pdfs/pdf/* public/downloads/ 2>/dev/null || echo "No complete PDFs to copy"
          cp -r pdfs/single-chapters public/downloads/chapters 2>/dev/null || echo "No chapter PDFs to copy"
          cp pdfs/sysops-framework-release.zip public/downloads/ 2>/dev/null || echo "No release archive to copy"

      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4

  # Create GitHub Release
  create-release:
    needs: [build-site, generate-pdf]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Download artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: sysops-framework-pdfs
          path: ./artifacts

      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: SysOps Framework ${{ steps.version.outputs.VERSION }}
          body: |
            ## SysOps Framework Release ${{ steps.version.outputs.VERSION }}

            ### 📚 Documentation
            - **Online**: [https://g3rhard.github.io/sysops-framework](https://g3rhard.github.io/sysops-framework)
            - **Complete PDF**: `sysops-framework-complete.pdf` - Full framework documentation
            - **Individual Chapters**: See `chapters/` directory for individual chapter PDFs
            - **EPUB**: `sysops-framework.epub` - Mobile-friendly ebook format
            - **Source Archive**: `sysops-framework-release.zip` - Complete source with generated files

            ### 🎯 What's New in This Release
            - Complete framework documentation with all 12 chapters
            - Interactive exercises and gamification elements
            - Implementation roadmaps and practical templates
            - Community contribution guidelines

            ### 🚀 Getting Started
            1. Download the complete PDF or browse online documentation
            2. Start with Chapter 1 to understand if your team faces the challenges this framework addresses
            3. Follow the implementation guide in Chapter 5
            4. Join the community discussions for support and sharing

            ### 📄 File Descriptions
            - **sysops-framework-complete.pdf**: Complete framework (all chapters) in single PDF
            - **sysops-framework.epub**: EPUB version for e-readers and mobile devices
            - **chapters/**: Individual chapter PDFs for modular reading and training
            - **sysops-framework-release.zip**: Complete archive including source files

          files: |
            artifacts/pdf/sysops-framework-complete.pdf
            artifacts/pdf/sysops-framework.epub
            artifacts/sysops-framework-release.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Quality checks
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Markdown lint
        uses: DavidAnson/markdownlint-cli2-action@992badcdf24e3b8eb7e87ff9287fe931bcb00c6e # v20
        with:
          globs: "**/*.md"
          config: ".markdownlint.json"
        continue-on-error: true

      - name: Spell check
        uses: crate-ci/typos@master
        with:
          files: "./content"
        continue-on-error: true

      - name: Hugo build check
        uses: peaceiris/actions-hugo@75d2e84710de30f6ff7268e08f310b60ef14033f # v3
        with:
          hugo-version: "latest"
          extended: true

      - name: Test Hugo build
        run: |
          hugo mod init github.com/g3rhard/sysops-framework || echo "Module already initialized"
          hugo --minify --environment production --destination test-build
        continue-on-error: true
